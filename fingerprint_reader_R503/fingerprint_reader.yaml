esphome:
  name: lettore-impronte
  friendly_name: lettore di impronte

esp8266:
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "<YOUR API KEY>"

  actions:
  - action: enroll
    variables:
      finger_id: int
      num_scans: int
    then:
      - fingerprint_grow.enroll:
          finger_id: !lambda 'return finger_id;'
          num_scans: !lambda 'return num_scans;'
  - action: cancel_enroll
    then:
      - fingerprint_grow.cancel_enroll:
  - action: delete
    variables:
      finger_id: int
    then:
      - fingerprint_grow.delete:
          finger_id: !lambda 'return finger_id;'
  - action: delete_all
    then:
      - fingerprint_grow.delete_all:

ota:
  - platform: esphome
    password: "<YOUR PASSWORD>"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  manual_ip:
    static_ip: 192.168.1.137
    gateway: 192.168.1.254
    subnet: 255.255.255.0
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Tester Fallback Hotspot"
    password: "<YOUR PASSWORD>"

captive_portal:

# Optional template text sensor for visual feedback
text_sensor:
  - platform: template
    id: fingerprint_state
    name: "Stato impronta"

# Optional sensors
binary_sensor:
  - platform: fingerprint_grow
    id: fingerprint_enrolling
    name: "Acquisendo impronta"

sensor:
  - platform: fingerprint_grow
    fingerprint_count:
      name: "Conta impronte"
      id: fingerprint_count
    last_finger_id:
      name: "Ultimo ID impronta"
    last_confidence:
      name: "Affidabilità ultima impronta"
    status:
      name: "Stato impronta"
    capacity:
      name: "Capacità impronta"
    security_level:
      name: "Livello di sicurezza"
    

uart:
  rx_pin: GPIO5 #D1
  tx_pin: GPIO4 #D2
  baud_rate: 57600

fingerprint_grow:
  sensing_pin: GPIO13 #D7   il pin D8  è necessario per il boot e se viene messo alto ci saranno problemi 



  on_enrollment_scan:
    - fingerprint_grow.aura_led_control:
        state: BREATHING
        speed: 30
        color: CYAN
        count: 2
    - fingerprint_grow.aura_led_control:
        state: ALWAYS_ON
        speed: 0
        color: YELLOW
        count: 0
    - text_sensor.template.publish:
        id: fingerprint_state
        state: "Impronta acquisita"

  on_enrollment_done:
    - fingerprint_grow.aura_led_control:
        state: BREATHING
        speed: 100
        color: BLUE
        count: 2
    - text_sensor.template.publish:
        id: fingerprint_state
        state: "acquisizione completata"

  on_enrollment_failed:
    - text_sensor.template.publish:
        id: fingerprint_state
        state: "Acquisizione impronta fallita"
    - fingerprint_grow.aura_led_control:
        state: FLASHING
        speed: 25
        color: RED
        count: 4

  on_finger_scan_start:
    - fingerprint_grow.aura_led_control:
        state: BREATHING
        color: YELLOW
        speed: 60
        count: 1  

  on_finger_scan_misplaced:
    - fingerprint_grow.aura_led_control:
        state: FLASHING
        speed: 25
        color: WHITE
        count: 3
    - text_sensor.template.publish:
        id: fingerprint_state
        state: "Impronta posizionata male"

  on_finger_scan_matched:
    - fingerprint_grow.aura_led_control:
        state: BREATHING
        speed: 200
        color: GREEN
        count: 1


    - text_sensor.template.publish:
        id: fingerprint_state
        state: !lambda 'return "Impronta Autorizzata " + to_string(finger_id) + ", Fedeltà " + to_string(confidence);'

    - text_sensor.template.publish:
        id: fingerprint_state
        state: "Impronta autorizzata"
    - delay: 600ms
    - text_sensor.template.publish:
        id: fingerprint_state
        state: "Resto in attesa, scansiona quando vuoi"
        
  # Pushing a tag_scanned event based on finger_id only if confidence is greater than 50
    - if:
        condition:
           lambda: 'return confidence > 50;'
        then:
          - homeassistant.tag_scanned: !lambda |-
              if ((finger_id >= 0) && (finger_id < 10)) {
                return "impronte persona1";
              } else if ((finger_id >= 10) && (finger_id < 20)) {
                return "impronte persona2";
              } else if ((finger_id >= 20) && (finger_id < 30)) {
                return "impronte persona3";
              } else {
                return "impronte sconosciute";
              }




  on_finger_scan_unmatched:
    - fingerprint_grow.aura_led_control:
        state: FLASHING
        speed: 15
        color: PURPLE
        count: 3
    - text_sensor.template.publish:
        id: fingerprint_state
        state: "Impronta non autorizzata"
    - delay: 2s
    - text_sensor.template.publish:
        id: fingerprint_state
        state: "Scansiona la tua impronta"
    - homeassistant.tag_scanned: !lambda |-
        return "impronte sconosciute";


  on_finger_scan_invalid:
    - fingerprint_grow.aura_led_control:
        state: FLASHING
        speed: 17
        color: RED
        count: 3


              


